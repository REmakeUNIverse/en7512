--- vr300-linux-orig/arch/mips/kernel/cpu-probe.c	2021-12-05 22:52:39.551293850 +0200
+++ vr300-linux/arch/mips/kernel/cpu-probe.c	2021-12-06 09:21:25.378872572 +0200
@@ -25,9 +25,6 @@
 #include <asm/system.h>
 #include <asm/watch.h>
 #include <asm/spram.h>
-#ifdef TCSUPPORT_CPU_EN7512
-#include <asm/tc3162/tc3162.h>
-#endif
 /*
  * Not all of the MIPS CPUs have the "wait" instruction available. Moreover,
  * the implementation of the "wait" feature differs between CPU families. This
@@ -75,17 +72,6 @@
 	return;
 }
 
-#ifdef TCSUPPORT_CPU_EN7512
-void cpu_wait_en7512(void)
-{
-	volatile unsigned int ram_access = 0;
-	int cnt;
-
-	for (cnt = 0; cnt < 100; cnt++)
-		ram_access = VPint(0xA0000000); /* DRAM access */
-}
-#endif
-
 /*
  * The RM7000 variant has to handle erratum 38.  The workaround is to not
  * have any pending stores when the WAIT instruction is executed.
@@ -215,11 +201,6 @@
 		cpu_wait = r4k_wait;
 		if (read_c0_config7() & MIPS_CONF7_WII)
 			cpu_wait = r4k_wait_irqoff;
-	#ifdef TCSUPPORT_CPU_EN7512
-		if (isEN7512){
-			cpu_wait = cpu_wait_en7512;
-		}
-	#endif
 		break;
 
 	case CPU_74K:
